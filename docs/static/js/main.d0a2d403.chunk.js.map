{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCGhBG,EAVK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACzB,OACI,sBAAKC,UAAU,2DAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAKJ,IACtB,4BAAIA,Q,uBCHFK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAIdN,EAJc,iDAImCO,UAAUF,GAJ7C,+DAKDG,MAAMR,GALL,cAKdS,EALc,gBAMCA,EAAKC,OANN,uBAMbC,EANa,EAMbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAEzB,MAAM,CACFC,GAAGD,EAAIC,GACPhB,MAAMe,EAAIf,MACVC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAbtB,kBAgBbY,GAhBa,4CAAH,sDCGRM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACtB,ECJwB,SAAEA,GAC1B,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAM,SAAAC,GACHH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAItB,CAACd,IAIGe,EDfyBK,CAAapB,GAAhCW,EAAb,EAAOL,KAAcQ,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIlB,UAAU,sDAAd,SAAsEI,IAEpEc,GAAW,mBAAGlB,UAAU,sDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEfpBW,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAGA,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAGA,6BAEQ2C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CACAA,SAAYA,GACJA,Y,MChB5BuB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.d0a2d403.chunk.js","sourcesContent":["import { React, useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    //tendremos el input value actualizado con el valor que la ultima persona escribio\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n//cuando la persona de ENTER o 'submit' no se refrescara la pagina\r\n        e.preventDefault(); \r\n\r\n        if( inputValue.trim().length > 0 ) {\r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }     \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={ url } alt={title}/>\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n\r\n\r\n","\r\n\r\n\r\nexport const  getGifs = async(category) =>{\r\n\r\n        \r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=ul1K3CSM5w38w1Hk5g01niAJlE5Nm8a2`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\nimport GifGridItem from './GifGridItem'\r\n// import getGifs from '../helpers/getGifs'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__delay-2s\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__bounce animate__delay-2s\">loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        \r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n        \r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import { React, useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']); //hook\r\n    \r\n\r\n    return (\r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories = { setCategories } />\r\n        <hr />\r\n\r\n        \r\n        <ol>\r\n            {\r\n                categories.map( category =>\r\n                    <GifGrid \r\n                    category = {category}\r\n                    key = { category }\r\n                    />\r\n                    \r\n                )\r\n            }\r\n        </ol>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\nimport './index.css'\n\nReactDOM.render(\n    \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}